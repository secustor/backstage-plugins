name: CI

on:
  pull_request:
  merge_group:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ci:
    name: CI step for node ${{ matrix.node-version }}
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        node-version: [20.x]

    env:
      CI: true
      NODE_OPTIONS: --max-old-space-size=8192

    steps:
      # This is needed so backstage-cli can compare the current branch with main
      - name: Checkout main branch for tests purposes
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          ref: main

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          ref: ${{ github.event.workflow_run.head_branch }}

      - name: Enable Corepack
        run: corepack enable

      - name: Set up Node ${{ matrix.node-version }}
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://registry.npmjs.org/ # Needed for auth
          cache: 'yarn'

      - name: yarn install
        run: yarn install --immutable

      - name: check for missing repo fixes
        run: yarn run check

      - name: validate config
        run: yarn backstage-cli config:check --lax

      - name: build all packages
        run: yarn backstage-cli repo build --all

  verify:
    name: Verify step
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout head branch
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          ref: ${{ github.event.workflow_run.head_branch }}

      - name: Enable Corepack
        run: corepack enable

      - name: Setup node
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: 22.x
          cache: 'yarn'

      - name: Install root dependencies
        run: yarn install --immutable

      - name: Verify lockfile duplicates
        run: yarn dedupe --strategy highest --check

  result:
    if: ${{ always() }}
    name: check all required jobs
    runs-on: ubuntu-24.04
    needs: [ci, verify]
    steps:
      - run: exit 1
        if: >-
          ${{
               contains(needs.*.result, 'failure')
            || contains(needs.*.result, 'cancelled')
            || contains(needs.*.result, 'skipped')
          }}
