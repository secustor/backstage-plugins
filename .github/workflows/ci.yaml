name: CI

on:
  pull_request:
  merge_group:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ci:
    name: CI step for node ${{ matrix.node-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]

    env:
      CI: true
      NODE_OPTIONS: --max-old-space-size=8192

    steps:
      - name: Checkout main branch for tests purposes
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          ref: main
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          ref: ${{ github.event.workflow_run.head_branch }}

      - name: Enable Corepack
        run: corepack enable

      - name: Set up Node ${{ matrix.node-version }}
        uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6 # v4
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://registry.npmjs.org/ # Needed for auth
          cache: 'yarn'

      - name: yarn install
        run: yarn install --immutable

      - name: check for missing repo fixes
        run: yarn fix --check

      - name: validate config
        run: yarn backstage-cli config:check --lax

      # running into problems with tsc:full after installing repo-tools
      - name: type checking and declarations
        run: yarn tsc:full

      - name: prettier
        run: yarn prettier:check

      - name: check api reports and generate API reference
        # check flags
        run: yarn backstage-repo-tools api-reports --allow-warnings -o ae-wrong-input-file-type --validate-release-tags build:api-reports:only --ci

      - name: build all packages
        run: yarn backstage-cli repo build --all

      - name: lint
        run: yarn backstage-cli repo lint --since origin/main

      - name: test changed packages
        run: yarn backstage-cli repo test --coverage --maxWorkers=3

      - name: ensure clean working directory
        run: |
          if files=$(git ls-files --exclude-standard --others --modified) && [[ -z "$files" ]]; then
            exit 0
          else
            echo ""
            echo "Working directory has been modified:"
            echo ""
            git status --short
            echo ""
            exit 1
          fi

  verify:
    name: Verify step
    runs-on: ubuntu-latest
    steps:
      - name: Checkout head branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
      - name: Enable Corepack
        run: corepack enable
      - name: Setup node
        uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6 # v4
        with:
          node-version: 20.x
          cache: 'yarn'
      - name: Install root dependencies
        run: yarn install --immutable
      - name: Verify lockfile duplicates
        run: yarn dedupe --strategy highest --check

  result:
    if: ${{ always() }}
    name: check all required jobs
    runs-on: ubuntu-latest
    needs: [ci, verify]
    steps:
      - run: exit 1
        if: >-
          ${{
               contains(needs.*.result, 'failure')
            || contains(needs.*.result, 'cancelled')
            || contains(needs.*.result, 'skipped')
          }}
