openapi: 3.0.0
info:
  title: renovate
  description: Backstage Renovate API
  version: 0.1.0
servers:
  - description: local test setup
    url: http://localhost:7007

paths:
  /health:
    get:
      summary: Get health status of the plugin
      responses:
        200:
          description: health status is green
          content:
            application/json:
              schema:
                type: string
                example: ok
  /reports:
    get:
      summary: Get all reports
      responses:
        200:
          $ref: '#/components/responses/reports'

  /reports/{host}:
    get:
      summary: Get reports for host
      parameters:
        - name: host
          in: path
          required: true
          schema:
            type: string
            example: github.com
      responses:
        200:
          $ref: '#/components/responses/reports'
        404:
          description: unknown host

  /reports/{host}/{repository}:
    get:
      summary: Get reports for repository
      parameters:
        - name: host
          in: path
          required: true
          schema:
            type: string
            example: github.com
        - name: repository
          in: path
          required: true
          schema:
            type: string
            example: myOrg/myRepository
      responses:
        200:
          $ref: '#/components/responses/reports'
        404:
          description: unknown repository

  /runs:
    post:
      summary: Start or get Renovate runs
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - target
              properties:
                target:
                  $ref: '#/components/schemas/target'

      responses:
        202:
          description: Run has been scheduled
          content:
            application/json:
              schema:
                type: object
                properties:
                  runID:
                    description: unique ID for the run
                    type: string
                    example: '9-d_CO9JlaEmd-OM9QfkI'
        400:
          description: Unexpected incoming data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/error'

components:
  responses:
    reports:
      description: Returns reports
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              additionalProperties: false
              required:
                - taskID
                - repository
                - host
                - lastUpdated
                - report
              properties:
                taskID:
                  type: string
                lastUpdated:
                  type: string
                  format: date-time
                host:
                  type: string
                repository:
                  type: string
                report:
                  $ref: '#/components/schemas/repositoryReport'

  schemas:
    error:
      anyOf:
        - type: object
          example:
            message: "I'm an error"
            code: 1111
        - type: string
          example: "I'm an error"
    target:
      oneOf:
        - type: string
          description: URL to an repository
          example: https://github.com/secustor/renovate-test
        - type: string
          description: stringified Entity with SourceLocation URL annotation
          example: component:default/backstage-plugins-example

    repositoryReportList:
      type: array
      items:
        $ref: '#/components/schemas/repositoryReport'
    repositoryReport:
      description: report for a specific repository
      type: object
      additionalProperties: false
      required:
        - branches
        - packageFiles
        - problems
      properties:
        branches:
          type: array
          items:
            type: object
        packageFiles:
          type: object
        problems:
          type: array
          items:
            type: object
