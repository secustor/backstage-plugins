openapi: 3.0.0
info:
  title: renovate
  description: Backstage Renovate API
  version: 0.2.0
servers:
  - description: local test setup
    url: http://localhost:7007

paths:
  /health:
    get:
      summary: Get health status of the plugin
      responses:
        200:
          description: health status is green
          content:
            application/json:
              schema:
                type: string
                example: ok
  /reports:
    get:
      summary: Get all reports
      responses:
        200:
          $ref: '#/components/responses/reports'
    delete:
      summary: Delete reports based on parameters
      parameters:
        - $ref: '#/components/parameters/keepLatest'
      responses:
        200:
          $ref: '#/components/responses/deleted-successful'

  /reports/{host}:
    get:
      summary: Get reports for host
      parameters:
        - name: host
          in: path
          required: true
          schema:
            type: string
            example: github.com
      responses:
        200:
          $ref: '#/components/responses/reports'
        404:
          description: unknown host
    delete:
      summary: Delete reports based on parameters
      parameters:
        - $ref: '#/components/parameters/keepLatest'
      responses:
        200:
          $ref: '#/components/responses/deleted-successful'

  /reports/{host}/{repository}:
    get:
      summary: Get reports for repository
      parameters:
        - name: host
          in: path
          required: true
          schema:
            type: string
            example: github.com
        - name: repository
          in: path
          required: true
          schema:
            type: string
            example: myOrg/myRepository
      responses:
        200:
          $ref: '#/components/responses/reports'
        404:
          description: unknown repository
    delete:
      summary: Delete reports based on parameters
      parameters:
        - $ref: '#/components/parameters/keepLatest'
      responses:
        200:
          $ref: '#/components/responses/deleted-successful'

  /dependencies:
    get:
      summary: Get dependencies for host
      parameters:
        # pagination
        - name: pageSize
          in: query
          description: size of the page
          schema:
            type: number
            default: 100
        - name: page
          in: query
          description: page number. starting with 0
          schema:
            type: number

        # optional data requests
        - name: availableValues
          in: query
          description: if set to true, the response will include all available values for the filters
          schema:
            type: boolean

        # filters
        - name: datasource
          in: query
          description: filter by datasource
          schema:
            type: array
            items:
              example: npm,pypi
              type: string
        - name: depName
          in: query
          description: filter by dependency name
          schema:
            type: array
            items:
              example: pdm,react
              type: string
        - name: depType
          in: query
          description: filter by dependency type
          schema:
            type: array
            items:
              example: dev,prod
              type: string
        - name: host
          in: query
          schema:
            type: array
            example: github.com,gitlab.example.com
            items:
              type: string
        - name: latestOnly
          in: query
          description: include only dependencies which have been found in the last extraction
          schema:
            type: boolean
        - name: manager
          in: query
          description: filter by manager
          schema:
            type: array
            items:
              example: npm,composer
              type: string
        - name: packageFile
          in: query
          description: filter by package file
          schema:
            type: array
            items:
              example: package.json,composer.json
              type: string
        - name: repository
          in: query
          schema:
            type: array
            example: myOrg/myRepository,myOrg/myOtherRepository
            items:
              type: string
      responses:
        200:
          $ref: '#/components/responses/dependencies'
        404:
          description: unknown host

  /runs:
    post:
      summary: Start or get Renovate runs
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - target
              properties:
                target:
                  $ref: '#/components/schemas/target'

      responses:
        202:
          description: Run has been scheduled
          content:
            application/json:
              schema:
                type: object
                properties:
                  taskID:
                    description: id of the scheduler task
                    type: string
                    example: '9-d_CO9JlaEmd-OM9QfkI'
        400:
          description: Unexpected incoming data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    $ref: '#/components/schemas/error'

components:
  parameters:
    keepLatest:
      name: keepLatest
      description: how many reports of all targets should be kept
      in: query
      required: false
      example: 3
      schema:
        type: number

  responses:
    dependencies:
      description: Returns dependencies
      headers:
        X-Total-Count:
          schema:
            type: integer
            description: Total number of entries
        X-Page-Count:
          schema:
            type: integer
            description: Total number of pages
        X-Current-Page:
          schema:
            type: integer
            description: Current page
        X-Page-Size:
          schema:
            type: integer
            description: Number of entries per page
      content:
        application/json:
          schema:
            type: object
            required:
              - dependencies
            properties:
              dependencies:
                type: array
                items:
                  $ref: '#/components/schemas/dependency'
              availableValues:
                type: object
                description: >
                  Will only be part of the response if `availableValues` is true.
                  Returns all available values for the applied filters
                properties:
                  datasource:
                    type: array
                    items:
                      type: string
                  depName:
                    type: array
                    items:
                      type: string
                  depType:
                    type: array
                    items:
                      type: string
                  host:
                    type: array
                    items:
                      type: string
                  manager:
                    type: array
                    items:
                      type: string
                  packageFile:
                    type: array
                    items:
                      type: string
                  repository:
                    type: array
                    items:
                      type: string

    deleted-successful:
      description: Successful deleted
      content:
        application/json:
          schema:
            type: object
            properties:
              deleted:
                type: number
                example: 15
                description: Numbers of reports deleted
    reports:
      description: Returns reports
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              additionalProperties: false
              required:
                - taskID
                - repository
                - host
                - timestamp
                - report
              properties:
                taskID:
                  type: string
                timestamp:
                  type: string
                  format: date-time
                host:
                  type: string
                repository:
                  type: string
                report:
                  $ref: '#/components/schemas/repositoryReport'

  schemas:
    error:
      anyOf:
        - type: object
          example:
            message: "I'm an error"
            code: 1111
        - type: string
          example: "I'm an error"
    target:
      anyOf:
        - type: string
          description: URL to an repository
          example: https://github.com/secustor/renovate-test
        - type: string
          description: stringified Entity with SourceLocation URL annotation
          example: component:default/backstage-plugins-example
        - type: string
          description: host and path
          example: secustor/backstage-plugins

    repositoryReportList:
      type: array
      items:
        $ref: '#/components/schemas/repositoryReport'

    repositoryReport:
      description: report for a specific repository
      type: object
      additionalProperties: false
      required:
        - branches
        - packageFiles
        - problems
      properties:
        branches:
          type: array
          items:
            type: object
        packageFiles:
          type: object
        problems:
          type: array
          items:
            type: object

    dependency:
      type: object
      additionalProperties: false
      required:
        - id
        - runID
        - host
        - repository
        - extractionTimestamp
        - manager
        - datasource
        - packageFile
        - depName
      properties:
        id:
          type: string
        runID:
          type: string
        host:
          type: string
        repository:
          type: string
        extractionTimestamp:
          type: string
          format: date-time
        manager:
          type: string
        datasource:
          type: string
        packageFile:
          type: string
        packageFileUrl:
          type: string
        depName:
          type: string
        packageName:
          type: string
        depType:
          type: string
        currentValue:
          type: string
        currentVersion:
          type: string
        currentVersionTimestamp:
          type: string
          format: date-time
        skipReason:
          type: string
        registryUrl:
          type: string
        sourceUrl:
          type: string
